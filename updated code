[root@ip-172-31-90-216 ansible]# cat after.yml
---
 - hosts: aws
   become: true
   vars_files:
      - cred.yml
   tasks:
      - name: add to ansible hosts file
        lineinfile:
          dest: /root/ansible/inventory
          insertbefore: '[node]'
          line: "172.0.0.1"
      - name: add to ansible hosts file
        lineinfile:
          dest: /root/ansible/inventory
          insertafter: '[node]'
          line: "172.0.0.2"
      - name: add to ansible hosts file
        lineinfile:
          dest: /root/ansible/inventory
          insertafter: '[node]'
          line: "172.0.0.3"
[root@ip-172-31-90-216 ansible]# cat ansible.cfg
[defaults]
inventory = /root/ansible/inventory
ask_pass = false
private_key_file = /root/ansible/kube.pem

[privilege_escalation]
become = true
become_method = sudo
become_user = root
become_ask_pass = false
[root@ip-172-31-90-216 ansible]# cat inst.yml
---
 - hosts: aws
   become: true
   vars_files:
      - cred.yml
   tasks:
     - name: launching ec2 instance for webserver
       ec2:
          instance_type: t2.medium
          key_name: kube
          image: ami-0742b4e673072066f
          region: us-east-1
          group: kube
          count: 1
          wait: yes
          vpc_subnet_id: "{{ aws_subnet_id }}"
          assign_public_ip: yes
          aws_access_key: "{{ aws_access_key_id }}"
          aws_secret_key: "{{ aws_secret_access_key }}"
          instance_tags:
              Name: master
       register: myec2
     - name: launching ec2 instance for webserver
       ec2:
          instance_type: t2.micro
          key_name: kube
          image: ami-0742b4e673072066f
          region: us-east-1
          group: kube
          count: 2
          wait: yes
          vpc_subnet_id: "{{ aws_subnet_id }}"
          assign_public_ip: yes
          aws_access_key: "{{ aws_access_key_id }}"
          aws_secret_key: "{{ aws_secret_access_key }}"
          instance_tags:
              Name: node
       register: ec2
     - name: add to ansible hosts file
       lineinfile:
         dest: /root/ansible/inventory
         insertbefore: '[node]'
         line: "{{ myec2.instances[0].public_ip }}"
     - name: add to ansible hosts file
       lineinfile:
         dest: /root/ansible/inventory
         insertafter: '[node]'
         line: "{{ ec2.instances[0].public_ip }}"
     - name: add to ansible hosts file
       lineinfile:
         dest: /root/ansible/inventory
         insertafter: '[node]'
         line: "{{ ec2.instances[1].public_ip }}"













#var: ec2.instances[0].public_ip
[root@ip-172-31-90-216 ansible]# cat key_upload.yml
---
 - hosts: aws
   become: true
   vars_files:
      - cred.yml
   tasks:
      - name: uploading key on aws
        ec2_key:
           name: kube
           region: us-east-1
           key_material: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDC3ybH8KvgWqnMWWLFHkwLgskxd8GMzN2IGii3nzetTNvjg5eHnP8tuebkNfbgoyWV7Zd/NgnlFMVXLzQy3MXeW1llkEE/m6/5Xl/3irpSBmD8+cJg0NKyqpM+lns64X37CwrHrBDKrktOmwaGWBVjCzwOjk2QPr4KILp7FSBzJ/pp4/lwVPBXjc2ilGuObR3jefNl004ze8/KVSYMAwKmpbpXGetEHkm+p+2x/S01/xnm2v+Lu4YoY4kcqXC0XBenvZiSqa/RtYu9R2TwxMSQHXzJngsYRUKtj2UiLt4tF3J1kdAQzPd24V3RFDob+bNPHBKQyFDs6LdJiPqgNzgL'
           state: present
           aws_access_key: "{{ aws_access_key_id }}"
           aws_secret_key: "{{ aws_secret_access_key }}"
[root@ip-172-31-90-216 ansible]# cat ll.yml
---
 - hosts: aws
   become: true
   vars_files:
      - cred.yml
   tasks:
     - name: launching ec2 instance for webserver
       ec2:
          instance_type: t2.micro
          key_name: kube
          image: ami-0742b4e673072066f
          region: us-east-1
          group: kube
          count: 1
          wait: yes
          vpc_subnet_id: "{{ aws_subnet_id }}"
          assign_public_ip: yes
          aws_access_key: "{{ aws_access_key_id }}"
          aws_secret_key: "{{ aws_secret_access_key }}"
          instance_tags:
              Name: master
       register: ec2
     - debug:
          var: ec2
#     - debug:
#          msg: "{{ ec2.instances.public_ip }}"
#     - name: Create SSH Group to login dynamically to EC2 Instance
#       add_host:
#          hostname: "{{ item.public_ip }}"
#          ansible_ssh_private_key_file: /root/ansible/kube.pem
#          groupname: ec2_server
#       with_items: ec2.instances
     - debug:
          var: ec2.instances[0].public_ip
     - debug:
          msg: "{{ ec2.instances[0].public_ip }}"
     - name: Add host to group 'just_created' with variable foo=42
       add_host:
          name: "{{ ec2.instances[0].public_ip }}"
          groups: node
          inventory_dir: /root/ansible
[root@ip-172-31-90-216 ansible]# cat po.yml
---
 - hosts: aws
   become: true
   vars_files:
      - cred.yml
   tasks:
     - debug:
          var: "{{ ec2_out.instances.public_ip }}"
[root@ip-172-31-90-216 ansible]# cat sg.yml
---
 - hosts: aws
   become: true
   vars_files:
     - cred.yml
   tasks:
     - name: creating security group
       ec2_group:
           name: kube
           description: Security grp for web server
           region: us-east-1
           aws_access_key: "{{ aws_access_key_id }}"
           aws_secret_key: "{{ aws_secret_access_key }}"
           rules:
              - proto: tcp
                from_port: 22
                to_port: 22
                cidr_ip: 0.0.0.0/0
              - proto: tcp
                from_port: 0
                to_port: 65535
                cidr_ip: 0.0.0.0/0
              - proto: udp
                from_port: 0
                to_port: 65535
                cidr_ip: 0.0.0.0/0
           rules_egress:
              - proto: all
                cidr_ip: 0.0.0.0/0

[root@ip-172-31-90-216 ansible]#
